

# Symbols in the grammar are case-sensitive.
# 
# This grammar uses a convention that
#    - terminals are lowercase          (president)
#    - preterminals are capitalized     (Noun)
#    - other nonterminals are all-caps  (NP)
# 
# This convention just makes grammars more readable to humans.  Thus:
#
#    - When *you* are writing grammars, you should 
#      follow this convention unless you have a good reason not to.  
#
#    - But the  *program* should still work with grammars that don't
#      follow this convention.  So how can the program reliably tell
#      the difference between terminal and nonterminal symbols?  If
#      there is at least one rule for rewriting a symbol, then that
#      symbol is a nonterminal and should be rewritten.
#######################

# Rules for creating full sentences.

4	ROOT	S .
1	ROOT	S !
1   ROOT    YN ?
100   ROOT    WH ?

# The basic grammar rules.  Here's what the abbreviations stand for:
#    S  = sentence
#    NP = noun phrase
#    VP = verb phrase
#    PP = prepositional phrase
#    Det = determiner (sometimes called "article")
#    Prep = preposition
#    Adj = adjective
#    Vi = intransitive verb
#    Vt = transitive verb
#    SBAR = complement
#    COMP = complementizer
#    CC = coordinator
#    NNP = proper noun


4	S	NP VP
1   S   Sub VP
5   VP  Vi                  #there is no NP after intransitive verb
2   VP  Vi SBAR             #complementizers
1   VP  Vi CC Vi            #thought and understood
5   VP  Vt NP               #NP after transitive verb
1   VP  Vt CC Vt NP         #wanted and ate a sandwich
1   VP  Vt NP SBAR          #complementizers
1   VP  VP PP               #PP on the verb for the sentence 'the president worked on every proposal on the desk'
1   VP  Be TGer NP          #is eating a sandwich: is + gerundive + NP
1   VP  Be Adj              #Be + Adj --> is lazy
1   VP  Be NP               #Be + NP --> is a sandwich
5	NP	Det Noun            #to limit entry into a loop
2   NP  NNP                 #proper noun like Solly
1   NP  NP CC NP            #several NP like Sally and Sally
1	NP	NP PP
4	PP	Prep NP
1   PP  PP PP               #several PP like on the desk, with Sally...
5	Noun	Adj Noun        #to favorite more adjectives
1   SBAR    COMP    S       #sentence like 'that ...'


#(b) Yes-no questions:
1   YN  Aux NP Vtp  NP          #Vtp = transitive verb present form -- does Sally want a sandwich
1   YN  Aux NP  Vip             #Vip = intransitive verb present form -- does Sally think
1   YN  is it true that S       # mixing terminals and nonterminals is ok.
1   YN  Be NP Adj               #is Sally fine ?


#(d) WH-word questions.
1   WH  WHT Aux NP Vtp          # what did sally eat
1   WH  WHT Aux NP Vtp NP with  # what did Sally eat the sandwich with
1   WH  WHT Aux NP Vip          # what did the president think
1   WH  WHT Aux NP Vip SBAR     # what did the president think that Sally ate
1   WH  WHI Aux NP Vtp NP       # where did Sally eat the sandwich
1   WH  WHI Aux NP Vip          # when did Sally understand
1   WH  who VP                  # who understood



# Vocabulary.  Your program can see that "ate" is a terminal
# symbol because there exists no rule for rewriting it.
# Any symbol that can rewrite as a terminal (or a string of
# terminals, like "chief of staff") is called a "preterminal."  Notice
# that a preterminal is a special kind of nonterminal.

1	Vt  	ate
1	Vt  	wanted
1	Vt  	kissed
1	Vt  	pickled
1   Vt      perplexed

1	Vi  	understood
1   Vi      sighed
1   Vi      thought
1   Vi      worked

1   Vtp     eat
1   Vtp     want

1   Vip     think
1   Vip     understand


1	Det	the
1	Det	a
1	Det	every

1	Noun	president
1	Noun	sandwich
1	Noun	pickle
1	Noun	chief of staff
1	Noun	floor
1   Noun    proposal
1   Noun    desk

1	Adj	fine
1	Adj	delicious
1	Adj	perplexed
1	Adj	pickled
1   Adj lazy
1   Adj very


1	Prep	with
1	Prep	on
1	Prep	under
1	Prep	in

1   NNP     Sally

1   CC      or
1   CC      and

1   COMP    that

1   Sub it

1   Be is

1   TGer eating

1   Aux did
1   Aux will
1   Aux does
1   Aux can

1   WHT what

1   WHI when
1   WHI how
1   WHI where

